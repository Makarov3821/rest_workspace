#!/usr/bin/env bash

#==================================================================
# set the current folder as the home of the rest workspace
#==================================================================
REST_HOME=`pwd`
#==================================================================
# Some prerequisite libraries for REST, which should be installed 
# and accessable when compling and excuting the REST package:
#==================================================================
#0): REST_FORTRAN_COMPILER: you need a compiler for the Fortran code
REST_FORTRAN_COMPILER="gfortran"
#1): REST_CINT_DIR: the path to libcint.so
REST_CINT_DIR="path_to_libcint.so"
#2) the path to access the fortrain file
REST_EXT_DIR='path_to_librestmatr.so'
#2): REST_BLAS_DIR: the path to libopenblas.so
REST_BLAS_DIR="path_to_libopenblas.so"
#3): REST_HDF5_DIR: the path to libhdf5.so
REST_HDF5_DIR="path_to_libhdf5.so"
#4): the path to libxc.so
REST_XC_DIR="path_to_libxc.so"


repository="github"
local_path=""

while getopts r:p: option
do
  case "${option}"
    in
    r) repository=${OPTARG};;
    p) local_path=${OPTARG};;
  esac
done

for i in $@
do
	if [ $i = "-h" ]; then 
    echo "Usage: Configure [OPTION...]"
		echo "Configure the complitation and simulation environment for the REST package on Linux OS."
		echo ""
		echo "OPTION:"
		echo " -h      print the help information"
		echo " -r      set the repository. The default one: github"
		echo "         local:    local repositories"
		echo "         github:   repositories on github"
		echo " -p      provide the path to the local repositories"
    echo "         It is not necessary for the repositories on github"
    echo " "
    echo " Example:"
    echo " 0) ./Config"
    echo "     : use the repositories on github by default"
    echo " 1) ./Config -r github"
    echo "     : use the repositories on github by default, and it is not necessary to declare the repository path with '-p' "
    echo " 2) ./Config -r local -p userid_@local_server:/path-to-the-repositories"
    echo "     : The configure script will then clone the rest, rest_tensors, rest_libcints via:"
    echo "          userid_@local_server:/path-to-the-repositories/rest.mirror"
    echo "          userid_@local_server:/path-to-the-repositories/rest_tensors.mirror"
    echo "          userid_@local_server:/path-to-the-repositories/rest_libcints.mirror"
    echo ""
    echo " Enjoy the electronic-structure simulation using the REST package"
    echo ""
    exit
	fi
done

if [ $repository = "github" ]; then
  export rest_repo_path="git@github.com:igor-1982/rest.git"
  export rest_tensors_repo_path="git@github.com:igor-1982/rest_tensors.git"
  export rest_libcint_repo_path="git@github.com:igor-1982/rest_libcint.git"
  echo $repository
elif [ $repository = "local" ]; then
  export rest_repo_path="${local_path}/rest.mirror"
  export rest_tensors_repo_path="${local_path}/rest_tensors.mirror"
  export rest_libcint_repo_path="${local_path}/rest_libcint.mirror"
  echo $repository
else
  echo "Invalid repository is used: $repository"
  exit
fi

#==================================================================
# Clone the source codes from repositories
#==================================================================
[ ! -d rest ] && git clone $rest_repo_path rest
[ ! -d rest_tensors ] && git clone $rest_tensors_repo_path rest_tensors
[ ! -d rest_libcint ] && git clone $rest_libcint_repo_path rest_libcint

# untar the basis sets in the json format from BSE
tar -xjf rest/basis_sets-json.tar.bz2
mv basis_sets-json.tar.bz2 rest/bse_pool


if ! command -v $REST_FORTRAN_COMPILER &> /dev/null
then
  echo "The fortran compiler $REST_FORTRAN_COMPILER could not be found. Please use an available fortran compiler"
  exit
else
  echo "The fortran compiler $REST_FORTRAN_COMPILER is available"
fi

#=======================================================================
# Append the setting of global enviroment variables to the bash_profile
#=======================================================================
if [ ! -f $HOME/.bash_profile ]; then 
  echo 'export REST_FORTRAN_COMPILER="'$REST_FORTRAN_COMPILER'"' > $HOME/.bash_profile
else
  echo 'export REST_FORTRAN_COMPILER="'$REST_FORTRAN_COMPILER'"' >> $HOME/.bash_profile
fi
echo 'export REST_HOME="'$REST_HOME'"' >> $HOME/.bash_profile
echo 'export REST_EXT_DIR="'$REST_EXT_DIR'"' >> $HOME/.bash_profile
echo 'export REST_CINT_DIR="'$REST_CINT_DIR'"' >> $HOME/.bash_profile
echo 'export REST_BLAS_DIR="'$REST_BLAS_DIR'"' >> $HOME/.bash_profile
echo 'export REST_HDF5_DIR="'$REST_HDF5_DIR'"' >> $HOME/.bash_profile
echo 'export REST_XC_DIR="'$REST_XC_DIR'"' >> $HOME/.bash_profile
echo 'export LD_LIBRARY_PATH="'$REST_EXT_DIR:$REST_CINT_DIR:$REST_BLAS_DIR:$REST_HDF5_DIR:'$LD_LIBRARY_PATH"' >> $HOME/.bash_profile
echo 'export RUSTDOCFLAGS="--html-in-header $REST_HOME/rest/katex.html"'


#echo 'export HDF5_DIR="'$libhdf5_path'"' >> $HOME/.bash_profile
## make sure gcc with correct version is loaded properly
#gcc_path='/share/apps/GCC/gcc8'
#echo 'export PATH="'$gcc_path'/bin:$PATH"' >> $HOME/.bash_profile
#echo 'export LD_LIBRARY_PATH="'$gcc_path'/lib:'$gcc_path'/lib64:$LD_LIBRARY_PATH"' >> $HOME/.bash_profile
#echo '#alias cc='$gcc_path'/gcc' >> $HOME/.bash_profile
